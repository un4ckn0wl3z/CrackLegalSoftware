[WSAAsyncGetHostByAddr]
SourceModule=ws2_32.api
@=WSAAsyncGetHostByAddr
[WSAAsyncGetHostByName]
SourceModule=ws2_32.api
@=WSAAsyncGetHostByName
[WSAAsyncGetProtoByName]
SourceModule=ws2_32.api
@=WSAAsyncGetProtoByName
[WSAAsyncGetProtoByNumber]
SourceModule=ws2_32.api
@=WSAAsyncGetProtoByNumber
[WSAAsyncGetServByName]
SourceModule=ws2_32.api
@=WSAAsyncGetServByName
[WSAAsyncGetServByPort]
SourceModule=ws2_32.api
@=WSAAsyncGetServByPort
[WSAAsyncSelect]
SourceModule=ws2_32.api
@=WSAAsyncSelect
[WSACancelAsyncRequest]
SourceModule=ws2_32.api
@=WSACancelAsyncRequest
[WSACleanup]
SourceModule=ws2_32.api
@=WSACleanup
[WSAGetLastError]
SourceModule=ws2_32.api
@=WSAGetLastError
[WSAIsBlocking]
SourceModule=ws2_32.api
@=WSAIsBlocking
[WSASetLastError]
SourceModule=ws2_32.api
@=WSASetLastError
[WSAStartup]
SourceModule=ws2_32.api
@=WSAStartup
[accept]
SourceModule=ws2_32.api
@=accept
[bind]
SourceModule=ws2_32.api
@=bind
[closesocket]
SourceModule=ws2_32.api
@=closesocket
[connect]
SourceModule=ws2_32.api
@=connect
[gethostbyaddr]
SourceModule=ws2_32.api
@=gethostbyaddr
[gethostbyname]
SourceModule=ws2_32.api
@=gethostbyname
[gethostname]
SourceModule=ws2_32.api
@=gethostname
[getpeername]
SourceModule=ws2_32.api
@=getpeername
[getprotobyname]
SourceModule=ws2_32.api
@=getprotobyname
[getprotobynumber]
SourceModule=ws2_32.api
@=getprotobynumber
[getservbyname]
SourceModule=ws2_32.api
@=getservbyname
[getservbyport]
SourceModule=ws2_32.api
@=getservbyport
[getsockname]
SourceModule=ws2_32.api
@=getsockname
[getsockopt]
SourceModule=ws2_32.api
@=getsockopt
[htonl]
SourceModule=ws2_32.api
@=htonl
[htons]
SourceModule=ws2_32.api
@=htons
[listen]
SourceModule=ws2_32.api
@=listen
[ntohl]
SourceModule=ws2_32.api
@=ntohl
[ntohs]
SourceModule=ws2_32.api
@=ntohs
[recv]
SourceModule=ws2_32.api
@=recv
[recvfrom]
SourceModule=ws2_32.api
@=recvfrom
[select]
SourceModule=ws2_32.api
@=select
[send]
SourceModule=ws2_32.api
@=send
[sendto]
SourceModule=ws2_32.api
@=sendto
[setsockopt]
SourceModule=ws2_32.api
@=setsockopt
[shutdown]
SourceModule=ws2_32.api
@=shutdown
[socket]
SourceModule=ws2_32.api
@=socket
[inet_addr]
1=const char* cp
ParamCount=1
@=inet_addr
[inet_ntoa]
1=struct in_addr in
ParamCount=1
Header=sockets.h.api;
@=inet_ntoa
[ioctlsocket]
1=[SOCKET] s
2=[Socket_IOCTL] cmd
3=u_long* argp
ParamCount=3
Header=sockets.h.api;
@=ioctlsocket
