[GetAdapterIndex]
1=LPWSTR AdapterName
2=PULONG IfIndex
ParamCount=2
@=GetAdapterIndex
[GetAdaptersAddresses]
1=[ADDRESS_FAMILY] Family
2=[GetAdaptersAddressesFlags] Flags
3=PVOID Reserved
4=PIP_ADAPTER_ADDRESSES AdapterAddresses
5=PULONG SizePointer
ParamCount=5
Header=iphlpapi.h.api;sockets.h.api;
@=GetAdaptersAddresses
[GetAdaptersInfo]
1=PIP_ADAPTER_INFO pAdapterInfo
2=PULONG pOutBufLen
ParamCount=2
Header=iphlpapi.h.api;
@=GetAdaptersInfo
[GetPerAdapterInfo]
1=ULONG IfIndex
2=PIP_PER_ADAPTER_INFO pPerAdapterInfo
3=PULONG pOutBufLen
ParamCount=3
Header=iphlpapi.h.api;
@=GetPerAdapterInfo
[GetUniDirectionalAdapterInfo]
1=PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo
2=PULONG dwOutBufLen
ParamCount=2
Header=iphlpapi.h.api;
@=GetUniDirectionalAdapterInfo
[CreateIpNetEntry]
1=PMIB_IPNETROW pArpEntry
ParamCount=1
Header=iphlpapi.h.api;
@=CreateIpNetEntry
[CreateProxyArpEntry]
1=DWORD dwAddress
2=DWORD dwMask
3=DWORD dwIfIndex
ParamCount=3
@=CreateProxyArpEntry
[DeleteIpNetEntry]
1=PMIB_IPNETROW pArpEntry
ParamCount=1
Header=iphlpapi.h.api;
@=DeleteIpNetEntry
[DeleteProxyArpEntry]
1=DWORD dwAddress
2=DWORD dwMask
3=DWORD dwIfIndex
ParamCount=3
@=DeleteProxyArpEntry
[FlushIpNetTable]
1=DWORD dwIfIndex
ParamCount=1
@=FlushIpNetTable
[GetIpNetTable]
1=PMIB_IPNETTABLE pIpNetTable
2=PULONG pdwSize
3=BOOL bOrder
ParamCount=3
Header=iphlpapi.h.api;
@=GetIpNetTable
[SendARP]
1=IPAddr DestIP
2=IPAddr SrcIP
3=PULONG pMacAddr
4=PULONG PhyAddrLen
ParamCount=4
Header=ip.h.api;
@=SendARP
[SetIpNetEntry]
1=PMIB_IPNETROW pArpEntry
ParamCount=1
Header=iphlpapi.h.api;
@=SetIpNetEntry
[ConvertInterfaceAliasToLuid]
1=const WCHAR* InterfaceAlias
2=PNET_LUID InterfaceLuid
ParamCount=2
Header=iphlpapi.h.api;
@=ConvertInterfaceAliasToLuid
[ConvertInterfaceGuidToLuid]
1=GUID* InterfaceGuid
2=PNET_LUID InterfaceLuid
ParamCount=2
Header=iphlpapi.h.api;windows.h.api;
@=ConvertInterfaceGuidToLuid
[ConvertInterfaceIndexToLuid]
1=NET_IFINDEX InterfaceIndex
2=PNET_LUID InterfaceLuid
ParamCount=2
Header=iphlpapi.h.api;
@=ConvertInterfaceIndexToLuid
[ConvertInterfaceLuidToAlias]
1=NET_LUID* InterfaceLuid
2=PWSTR InterfaceAlias
3=SIZE_T Length
ParamCount=3
Header=iphlpapi.h.api;
@=ConvertInterfaceLuidToAlias
[ConvertInterfaceLuidToGuid]
1=NET_LUID* InterfaceLuid
2=GUID* InterfaceGuid
ParamCount=2
Header=iphlpapi.h.api;windows.h.api;
@=ConvertInterfaceLuidToGuid
[ConvertInterfaceLuidToIndex]
1=NET_LUID* InterfaceLuid
2=PNET_IFINDEX InterfaceIndex
ParamCount=2
Header=iphlpapi.h.api;
@=ConvertInterfaceLuidToIndex
[ConvertInterfaceLuidToNameA]
1=NET_LUID* InterfaceLuid
2=PSTR InterfaceName
3=SIZE_T Length
ParamCount=3
Header=iphlpapi.h.api;
@=ConvertInterfaceLuidToNameA
[ConvertInterfaceLuidToNameW]
1=NET_LUID* InterfaceLuid
2=PWSTR InterfaceName
3=SIZE_T Length
ParamCount=3
Header=iphlpapi.h.api;
@=ConvertInterfaceLuidToNameW
[ConvertInterfaceNameToLuidA]
1=CHAR* InterfaceName
2=PNET_LUID InterfaceLuid
ParamCount=2
Header=iphlpapi.h.api;
@=ConvertInterfaceNameToLuidA
[ConvertInterfaceNameToLuidW]
1=const WCHAR* InterfaceName
2=PNET_LUID InterfaceLuid
ParamCount=2
Header=iphlpapi.h.api;
@=ConvertInterfaceNameToLuidW
[if_indextoname]
1=NET_IFINDEX InterfaceIndex
2=PCHAR InterfaceName
ParamCount=2
Header=iphlpapi.h.api;
@=if_indextoname
[if_nametoindex]
1=PCSTR InterfaceName
ParamCount=1
@=if_nametoindex
[GetFriendlyIfIndex]
1=DWORD IfIndex
ParamCount=1
@=GetFriendlyIfIndex
[GetIfEntry]
1=PMIB_IFROW pIfRow
ParamCount=1
Header=iphlpapi.h.api;
@=GetIfEntry
[GetIfEntry2]
1=PMIB_IF_ROW2 Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetIfEntry2
[GetIfStackTable]
1=PMIB_IFSTACK_TABLE* Table
ParamCount=1
Header=iphlpapi.h.api;
@=GetIfStackTable
[GetIfTable]
1=PMIB_IFTABLE pIfTable
2=PULONG pdwSize
3=BOOL bOrder
ParamCount=3
Header=iphlpapi.h.api;
@=GetIfTable
[GetIfTable2]
1=PMIB_IF_TABLE2* Table
ParamCount=1
Header=iphlpapi.h.api;
@=GetIfTable2
[GetIfTable2Ex]
1=[MIB_IF_TABLE_LEVEL] Level
2=PMIB_IF_TABLE2* Table
ParamCount=2
Header=iphlpapi.h.api;
@=GetIfTable2Ex
[GetInterfaceInfo]
1=PIP_INTERFACE_INFO pIfTable
2=PULONG dwOutBufLen
ParamCount=2
Header=iphlpapi.h.api;
@=GetInterfaceInfo
[GetInvertedIfStackTable]
1=PMIB_INVERTEDIFSTACK_TABLE* Table
ParamCount=1
Header=iphlpapi.h.api;
@=GetInvertedIfStackTable
[GetIpInterfaceEntry]
1=PMIB_IPINTERFACE_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetIpInterfaceEntry
[GetIpInterfaceTable]
1=[ADDRESS_FAMILY] Family
2=PMIB_IPINTERFACE_TABLE* Table
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetIpInterfaceTable
[GetNumberOfInterfaces]
1=PDWORD pdwNumIf
ParamCount=1
@=GetNumberOfInterfaces
[InitializeIpInterfaceEntry]
1=PMIB_IPINTERFACE_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=InitializeIpInterfaceEntry
[SetIfEntry]
1=PMIB_IFROW pIfRow
ParamCount=1
Header=iphlpapi.h.api;
@=SetIfEntry
[SetIpInterfaceEntry]
1=PMIB_IPINTERFACE_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=SetIpInterfaceEntry
[GetIcmpStatistics]
1=PMIB_ICMP pStats
ParamCount=1
Header=iphlpapi.h.api;
@=GetIcmpStatistics
[GetIpStatistics]
1=PMIB_IPSTATS pStats
ParamCount=1
Header=iphlpapi.h.api;
@=GetIpStatistics
[Icmp6CreateFile]
ParamCount=0
@=Icmp6CreateFile
[Icmp6ParseReplies]
1=LPVOID ReplyBuffer
2=DWORD ReplySize
ParamCount=2
@=Icmp6ParseReplies
[Icmp6SendEcho2]
1=HANDLE IcmpHandle
2=HANDLE Event
3=PIO_APC_ROUTINE ApcRoutine
4=PVOID ApcContext
5=struct sockaddr_in6* SourceAddress
6=struct sockaddr_in6* DestinationAddress
7=LPVOID RequestData
8=WORD RequestSize
9=PIP_OPTION_INFORMATION RequestOptions
10=LPVOID ReplyBuffer
11=DWORD ReplySize
12=DWORD Timeout
ParamCount=12
Header=iphlpapi.h.api;ip.h.api;windows.h.api;
@=Icmp6SendEcho2
[IcmpSendEcho2Ex]
1=HANDLE IcmpHandle
2=HANDLE Event
3=PIO_APC_ROUTINE ApcRoutine
4=PVOID ApcContext
5=IPAddr SourceAddress
6=IPAddr DestinationAddress
7=LPVOID RequestData
8=WORD RequestSize
9=PIP_OPTION_INFORMATION RequestOptions
10=LPVOID ReplyBuffer
11=DWORD ReplySize
12=DWORD Timeout
ParamCount=12
Header=ip.h.api;windows.h.api;
@=IcmpSendEcho2Ex
[SetIpTTL]
1=UINT nTTL
ParamCount=1
@=SetIpTTL
[AddIPAddress]
1=IPAddr Address
2=IPMask IpMask
3=DWORD IfIndex
4=PULONG NTEContext
5=PULONG NTEInstance
ParamCount=5
Header=iphlpapi.h.api;ip.h.api;
@=AddIPAddress
[CreateAnycastIpAddressEntry]
1=MIB_ANYCASTIPADDRESS_ROW* Row
ParamCount=1
Header=iphlpapi.h.api;
@=CreateAnycastIpAddressEntry
[CreateUnicastIpAddressEntry]
1=MIB_UNICASTIPADDRESS_ROW* Row
ParamCount=1
Header=iphlpapi.h.api;
@=CreateUnicastIpAddressEntry
[DeleteIPAddress]
1=ULONG NTEContext
ParamCount=1
@=DeleteIPAddress
[DeleteAnycastIpAddressEntry]
1=MIB_ANYCASTIPADDRESS_ROW* Row
ParamCount=1
Header=iphlpapi.h.api;
@=DeleteAnycastIpAddressEntry
[DeleteUnicastIpAddressEntry]
1=MIB_UNICASTIPADDRESS_ROW* Row
ParamCount=1
Header=iphlpapi.h.api;
@=DeleteUnicastIpAddressEntry
[GetAnycastIpAddressEntry]
1=PMIB_ANYCASTIPADDRESS_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetAnycastIpAddressEntry
[GetAnycastIpAddressTable]
1=[ADDRESS_FAMILY] Family
2=PMIB_ANYCASTIPADDRESS_TABLE* Table
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetAnycastIpAddressTable
[GetIpAddrTable]
1=PMIB_IPADDRTABLE pIpAddrTable
2=PULONG pdwSize
3=BOOL bOrder
ParamCount=3
Header=iphlpapi.h.api;
@=GetIpAddrTable
[GetMulticastIpAddressEntry]
1=PMIB_MULTICASTIPADDRESS_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetMulticastIpAddressEntry
[GetMulticastIpAddressTable]
1=[ADDRESS_FAMILY] Family
2=PMIB_MULTICASTIPADDRESS_TABLE* Table
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetMulticastIpAddressTable
[GetUnicastIpAddressEntry]
1=PMIB_UNICASTIPADDRESS_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetUnicastIpAddressEntry
[GetUnicastIpAddressTable]
1=[ADDRESS_FAMILY] Family
2=PMIB_UNICASTIPADDRESS_TABLE* Table
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetUnicastIpAddressTable
[InitializeUnicastIpAddressEntry]
1=PMIB_UNICASTIPADDRESS_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=InitializeUnicastIpAddressEntry
[IpReleaseAddress]
1=PIP_ADAPTER_INDEX_MAP AdapterInfo
ParamCount=1
Header=iphlpapi.h.api;
@=IpReleaseAddress
[IpRenewAddress]
1=PIP_ADAPTER_INDEX_MAP AdapterInfo
ParamCount=1
Header=iphlpapi.h.api;
@=IpRenewAddress
[NotifyStableUnicastIpAddressTable]
1=[ADDRESS_FAMILY] Family
2=PMIB_UNICASTIPADDRESS_TABLE* Table
3=PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK CallerCallback
4=PVOID CallerContext
5=HANDLE* NotificationHandle
ParamCount=5
Header=iphlpapi.h.api;sockets.h.api;windows.h.api;
@=NotifyStableUnicastIpAddressTable
[SetUnicastIpAddressEntry]
1=MIB_UNICASTIPADDRESS_ROW* Row
ParamCount=1
Header=iphlpapi.h.api;
@=SetUnicastIpAddressEntry
[CreateIpNetEntry2]
1=MIB_IPNET_ROW2* Row
ParamCount=1
Header=iphlpapi.h.api;
@=CreateIpNetEntry2
[DeleteIpNetEntry2]
1=MIB_IPNET_ROW2* Row
ParamCount=1
Header=iphlpapi.h.api;
@=DeleteIpNetEntry2
[FlushIpNetTable2]
1=[ADDRESS_FAMILY] Family
2=NET_IFINDEX InterfaceIndex
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=FlushIpNetTable2
[GetIpNetEntry2]
1=PMIB_IPNET_ROW2 Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetIpNetEntry2
[GetIpNetTable2]
1=[ADDRESS_FAMILY] Family
2=PMIB_IPNET_TABLE2* Table
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetIpNetTable2
[ResolveIpNetEntry2]
1=PMIB_IPNET_ROW2 Row
2=SOCKADDR_INET* SourceAddress
ParamCount=2
Header=iphlpapi.h.api;
@=ResolveIpNetEntry2
[ResolveNeighbor]
1=SOCKADDR* NetworkAddress
2=PVOID PhysicalAddress
3=PULONG PhysicalAddressLength
ParamCount=3
Header=sockets.h.api;
@=ResolveNeighbor
[SetIpNetEntry2]
1=PMIB_IPNET_ROW2 Row
ParamCount=1
Header=iphlpapi.h.api;
@=SetIpNetEntry2
[FlushIpPathTable]
1=[ADDRESS_FAMILY] Family
ParamCount=1
Header=sockets.h.api;
@=FlushIpPathTable
[GetIpPathEntry]
1=PMIB_IPPATH_ROW Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetIpPathEntry
[GetIpPathTable]
1=[ADDRESS_FAMILY] Family
2=MIB_IPPATH_TABLE* Table
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetIpPathTable
[CreateIpForwardEntry]
1=PMIB_IPFORWARDROW pRoute
ParamCount=1
Header=iphlpapi.h.api;
@=CreateIpForwardEntry
[CreateIpForwardEntry2]
1=MIB_IPFORWARD_ROW2* Row
ParamCount=1
Header=iphlpapi.h.api;
@=CreateIpForwardEntry2
[DeleteIpForwardEntry]
1=PMIB_IPFORWARDROW pRoute
ParamCount=1
Header=iphlpapi.h.api;
@=DeleteIpForwardEntry
[DeleteIpForwardEntry2]
1=MIB_IPFORWARD_ROW2* Row
ParamCount=1
Header=iphlpapi.h.api;
@=DeleteIpForwardEntry2
[EnableRouter]
1=HANDLE* pHandle
2=OVERLAPPED* pOverlapped
ParamCount=2
Header=windows.h.api;
@=EnableRouter
[GetBestInterface]
1=IPAddr dwDestAddr
2=PDWORD pdwBestIfIndex
ParamCount=2
Header=ip.h.api;
@=GetBestInterface
[GetBestInterfaceEx]
1=struct sockaddr* pDestAddr
2=PDWORD pdwBestIfIndex
ParamCount=2
Header=sockets.h.api;
@=GetBestInterfaceEx
[GetBestRoute]
1=DWORD dwDestAddr
2=DWORD dwSourceAddr
3=PMIB_IPFORWARDROW pBestRoute
ParamCount=3
Header=iphlpapi.h.api;
@=GetBestRoute
[GetBestRoute2]
1=NET_LUID* InterfaceLuid
2=NET_IFINDEX InterfaceIndex
3=SOCKADDR_INET* SourceAddress
4=SOCKADDR_INET* DestinationAddress
5=ULONG AddressSortOptions
6=PMIB_IPFORWARD_ROW2 BestRoute
7=SOCKADDR_INET* BestSourceAddress
ParamCount=7
Header=iphlpapi.h.api;
@=GetBestRoute2
[GetIpForwardEntry2]
1=PMIB_IPFORWARD_ROW2 Row
ParamCount=1
Header=iphlpapi.h.api;
@=GetIpForwardEntry2
[GetIpForwardTable]
1=PMIB_IPFORWARDTABLE pIpForwardTable
2=PULONG pdwSize
3=BOOL bOrder
ParamCount=3
Header=iphlpapi.h.api;
@=GetIpForwardTable
[GetIpForwardTable2]
1=[ADDRESS_FAMILY] Family
2=PMIB_IPFORWARD_TABLE2* Table
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetIpForwardTable2
[GetRTTAndHopCount]
1=IPAddr DestIpAddress
2=PULONG HopCount
3=ULONG MaxHops
4=PULONG RTT
ParamCount=4
Header=ip.h.api;
@=GetRTTAndHopCount
[InitializeIpForwardEntry]
1=PMIB_IPFORWARD_ROW2 Row
ParamCount=1
Header=iphlpapi.h.api;
@=InitializeIpForwardEntry
[SetIpForwardEntry]
1=PMIB_IPFORWARDROW pRoute
ParamCount=1
Header=iphlpapi.h.api;
@=SetIpForwardEntry
[SetIpForwardEntry2]
1=MIB_IPFORWARD_ROW2* Route
ParamCount=1
Header=iphlpapi.h.api;
@=SetIpForwardEntry2
[SetIpStatistics]
1=PMIB_IPSTATS pIpStats
ParamCount=1
Header=iphlpapi.h.api;
@=SetIpStatistics
[SetIpStatisticsEx]
1=PMIB_IPSTATS pIpStats
2=ULONG Family
ParamCount=2
Header=iphlpapi.h.api;
@=SetIpStatisticsEx
[UnenableRouter]
1=OVERLAPPED* pOverlapped
2=LPDWORD lpdwEnableCount
ParamCount=2
Header=windows.h.api;
@=UnenableRouter
[FreeMibTable]
1=PVOID Memory
ParamCount=1
@=FreeMibTable
[ConvertIpv4MaskToLength]
1=ULONG Mask
2=PUINT8 MaskLength
ParamCount=2
@=ConvertIpv4MaskToLength
[ConvertLengthToIpv4Mask]
1=ULONG MaskLength
2=PULONG Mask
ParamCount=2
@=ConvertLengthToIpv4Mask
[CreateSortedAddressPairs]
1=PSOCKADDR_IN6 SourceAddressList
2=ULONG SourceAddressCount
3=PSOCKADDR_IN6 DestinationAddressList
4=ULONG DestinationAddressCount
5=ULONG AddressSortOptions
6=PSOCKADDR_IN6_PAIR* SortedAddressPairList
7=ULONG* SortedAddressPairCount
ParamCount=7
Header=iphlpapi.h.api;
@=CreateSortedAddressPairs
[ParseNetworkString]
1=const WCHAR* NetworkString
2=DWORD Types
3=PNET_ADDRESS_INFO AddressInfo
4=USHORT* PortNumber
5=BYTE* PrefixLength
ParamCount=5
Header=iphlpapi.h.api;
@=ParseNetworkString
[GetNetworkParams]
1=PFIXED_INFO pFixedInfo
2=PULONG pOutBufLen
ParamCount=2
Header=iphlpapi.h.api;
@=GetNetworkParams
[CancelMibChangeNotify2]
1=HANDLE NotificationHandle
ParamCount=1
Header=windows.h.api;
@=CancelMibChangeNotify2
[NotifyAddrChange]
1=PHANDLE Handle
2=LPOVERLAPPED overlapped
ParamCount=2
Header=windows.h.api;
@=NotifyAddrChange
[NotifyIpInterfaceChange]
1=[ADDRESS_FAMILY] Family
2=PIPINTERFACE_CHANGE_CALLBACK Callback
3=PVOID CallerContext
4=BOOLEAN InitialNotification
5=HANDLE* NotificationHandle
ParamCount=5
Header=iphlpapi.h.api;sockets.h.api;windows.h.api;
@=NotifyIpInterfaceChange
[NotifyRouteChange]
1=PHANDLE Handle
2=LPOVERLAPPED overlapped
ParamCount=2
Header=windows.h.api;
@=NotifyRouteChange
[NotifyRouteChange2]
1=[ADDRESS_FAMILY] Family
2=PIPFORWARD_CHANGE_CALLBACK Callback
3=PVOID CallerContext
4=BOOLEAN InitialNotification
5=HANDLE* NotificationHandle
ParamCount=5
Header=iphlpapi.h.api;sockets.h.api;windows.h.api;
@=NotifyRouteChange2
[NotifyUnicastIpAddressChange]
1=[ADDRESS_FAMILY] Family
2=PUNICAST_IPADDRESS_CHANGE_CALLBACK Callback
3=PVOID CallerContext
4=BOOLEAN InitialNotification
5=HANDLE* NotificationHandle
ParamCount=5
Header=iphlpapi.h.api;sockets.h.api;windows.h.api;
@=NotifyUnicastIpAddressChange
[CancelSecurityHealthChangeNotify]
1=LPOVERLAPPED notifyOverlapped
ParamCount=1
Header=windows.h.api;
@=CancelSecurityHealthChangeNotify
[NotifySecurityHealthChange]
1=PHANDLE pHandle
2=LPOVERLAPPED pOverLapped
3=PULONG SecurityHealthFlags
ParamCount=3
Header=windows.h.api;
@=NotifySecurityHealthChange
[GetTeredoPort]
1=USHORT* Port
ParamCount=1
@=GetTeredoPort
[NotifyTeredoPortChange]
1=PTEREDO_PORT_CHANGE_CALLBACK Callback
2=PVOID CallerContext
3=BOOLEAN InitialNotification
4=HANDLE* NotificationHandle
ParamCount=4
Header=iphlpapi.h.api;windows.h.api;
@=NotifyTeredoPortChange
[GetExtendedTcpTable]
1=PVOID pTcpTable
2=PDWORD pdwSize
3=BOOL bOrder
4=[ADDRESS_FAMILY] ulAf
5=[TCP_TABLE_CLASS] TableClass
6=ULONG Reserved
ParamCount=6
Header=iphlpapi.h.api;sockets.h.api;
@=GetExtendedTcpTable
[GetExtendedUdpTable]
1=PVOID pUdpTable
2=PDWORD pdwSize
3=BOOL bOrder
4=[ADDRESS_FAMILY] ulAf
5=[UDP_TABLE_CLASS] TableClass
6=ULONG Reserved
ParamCount=6
Header=iphlpapi.h.api;sockets.h.api;
@=GetExtendedUdpTable
[GetOwnerModuleFromTcp6Entry]
1=PMIB_TCP6ROW_OWNER_MODULE pTcpEntry
2=[TCPIP_OWNER_MODULE_INFO_CLASS] Class
3=PVOID Buffer
4=PDWORD pdwSize
ParamCount=4
Header=iphlpapi.h.api;
@=GetOwnerModuleFromTcp6Entry
[GetOwnerModuleFromTcpEntry]
1=PMIB_TCPROW_OWNER_MODULE pTcpEntry
2=[TCPIP_OWNER_MODULE_INFO_CLASS] Class
3=PVOID Buffer
4=PDWORD pdwSize
ParamCount=4
Header=iphlpapi.h.api;
@=GetOwnerModuleFromTcpEntry
[GetOwnerModuleFromUdp6Entry]
1=PMIB_UDP6ROW_OWNER_MODULE pUdpEntry
2=[TCPIP_OWNER_MODULE_INFO_CLASS] Class
3=PVOID Buffer
4=PDWORD pdwSize
ParamCount=4
Header=iphlpapi.h.api;
@=GetOwnerModuleFromUdp6Entry
[GetOwnerModuleFromUdpEntry]
1=PMIB_UDPROW_OWNER_MODULE pUdpEntry
2=[TCPIP_OWNER_MODULE_INFO_CLASS] Class
3=PVOID Buffer
4=PDWORD pdwSize
ParamCount=4
Header=iphlpapi.h.api;
@=GetOwnerModuleFromUdpEntry
[GetPerTcp6ConnectionEStats]
1=PMIB_TCP6ROW Row
2=[TCP_ESTATS_TYPE] EstatsType
3=PUCHAR Rw
4=ULONG RwVersion
5=ULONG RwSize
6=PUCHAR Ros
7=ULONG RosVersion
8=ULONG RosSize
9=PUCHAR Rod
10=ULONG RodVersion
11=ULONG RodSize
ParamCount=11
Header=iphlpapi.h.api;
@=GetPerTcp6ConnectionEStats
[GetPerTcpConnectionEStats]
1=PMIB_TCPROW Row
2=[TCP_ESTATS_TYPE] EstatsType
3=PUCHAR Rw
4=ULONG RwVersion
5=ULONG RwSize
6=PUCHAR Ros
7=ULONG RosVersion
8=ULONG RosSize
9=PUCHAR Rod
10=ULONG RodVersion
11=ULONG RodSize
ParamCount=11
Header=iphlpapi.h.api;
@=GetPerTcpConnectionEStats
[GetTcpStatistics]
1=PMIB_TCPSTATS pStats
ParamCount=1
Header=iphlpapi.h.api;
@=GetTcpStatistics
[GetTcpStatisticsEx]
1=PMIB_TCPSTATS pStats
2=[ADDRESS_FAMILY] dwFamily
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetTcpStatisticsEx
[GetTcp6Table]
1=PMIB_TCP6TABLE TcpTable
2=PULONG SizePointer
3=BOOL Order
ParamCount=3
Header=iphlpapi.h.api;
@=GetTcp6Table
[GetTcp6Table2]
1=PMIB_TCP6TABLE2 TcpTable
2=PULONG SizePointer
3=BOOL Order
ParamCount=3
Header=iphlpapi.h.api;
@=GetTcp6Table2
[GetTcpTable]
1=PMIB_TCPTABLE pTcpTable
2=PDWORD pdwSize
3=BOOL bOrder
ParamCount=3
Header=iphlpapi.h.api;
@=GetTcpTable
[GetTcpTable2]
1=PMIB_TCPTABLE2 TcpTable
2=PULONG SizePointer
3=BOOL Order
ParamCount=3
Header=iphlpapi.h.api;
@=GetTcpTable2
[SetPerTcp6ConnectionEStats]
1=PMIB_TCP6ROW Row
2=[TCP_ESTATS_TYPE] EstatsType
3=PUCHAR Rw
4=ULONG RwVersion
5=ULONG RwSize
6=ULONG Offset
ParamCount=6
Header=iphlpapi.h.api;
@=SetPerTcp6ConnectionEStats
[SetPerTcpConnectionEStats]
1=PMIB_TCP6ROW Row
2=[TCP_ESTATS_TYPE] EstatsType
3=PUCHAR Rw
4=ULONG RwVersion
5=ULONG RwSize
6=ULONG Offset
ParamCount=6
Header=iphlpapi.h.api;
@=SetPerTcpConnectionEStats
[SetTcpEntry]
1=PMIB_TCPROW pTcpRow
ParamCount=1
Header=iphlpapi.h.api;
@=SetTcpEntry
[GetUdp6Table]
1=PMIB_UDP6TABLE Udp6Table
2=PULONG SizePointer
3=BOOL Order
ParamCount=3
Header=iphlpapi.h.api;
@=GetUdp6Table
[GetUdpStatistics]
1=PMIB_UDPSTATS pStats
ParamCount=1
Header=iphlpapi.h.api;
@=GetUdpStatistics
[GetUdpStatisticsEx]
1=PMIB_UDPSTATS pStats
2=[ADDRESS_FAMILY] dwFamily
ParamCount=2
Header=iphlpapi.h.api;sockets.h.api;
@=GetUdpStatisticsEx
[GetUdpTable]
1=PMIB_UDPTABLE pUdpTable
2=PDWORD pdwSize
3=BOOL bOrder
ParamCount=3
Header=iphlpapi.h.api;
@=GetUdpTable
[AllocateAndGetTcpExTableFromStack]
1=PVOID* ppTcpTable
2=BOOL bOrder
3=HANDLE hHeap
4=DWORD dwFlags
5=[ADDRESS_FAMILY] dwFamily
ParamCount=5
Header=sockets.h.api;windows.h.api;
@=AllocateAndGetTcpExTableFromStack
[AllocateAndGetUdpExTableFromStack]
1=PVOID* ppUDPTable
2=BOOL bOrder
3=HANDLE hHeap
4=DWORD dwFlags
5=[ADDRESS_FAMILY] dwFamily
ParamCount=5
Header=sockets.h.api;windows.h.api;
@=AllocateAndGetUdpExTableFromStack
[IcmpCloseHandle]
1=HANDLE IcmpHandle
ParamCount=1
Header=windows.h.api;
@=IcmpCloseHandle
[IcmpCreateFile]
ParamCount=0
@=IcmpCreateFile
[IcmpParseReplies]
1=LPVOID ReplyBuffer
2=DWORD ReplySize
ParamCount=2
@=IcmpParseReplies
[IcmpSendEcho]
1=HANDLE IcmpHandle
2=IPAddr DestinationAddress
3=LPVOID RequestData
4=WORD RequestSize
5=PIP_OPTION_INFORMATION RequestOptions
6=LPVOID ReplyBuffer
7=DWORD ReplySize
8=DWORD Timeout
ParamCount=8
Header=ip.h.api;windows.h.api;
@=IcmpSendEcho
[IcmpSendEcho2]
1=HANDLE IcmpHandle
2=HANDLE Event
3=PIO_APC_ROUTINE ApcRoutine
4=PVOID ApcContext
5=IPAddr DestinationAddress
6=LPVOID RequestData
7=WORD RequestSize
8=PIP_OPTION_INFORMATION RequestOptions
9=LPVOID ReplyBuffer
10=DWORD ReplySize
11=DWORD Timeout
ParamCount=11
Header=ip.h.api;windows.h.api;
@=IcmpSendEcho2
[GetIpNetworkConnectionBandwidthEstimates]
1=NET_IFINDEX InterfaceIndex
2=[ADDRESS_FAMILY] AddressFamily
3=PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates
ParamCount=3
Header=iphlpapi.h.api;sockets.h.api;
@=GetIpNetworkConnectionBandwidthEstimates
[CancelIPChangeNotify]
1=LPOVERLAPPED notifyOverlapped
ParamCount=1
Header=windows.h.api;
@=CancelIPChangeNotify
[CreatePersistentTcpPortReservation]
1=USHORT StartPort
2=USHORT NumberOfPorts
3=PULONG64 Token
ParamCount=3
@=CreatePersistentTcpPortReservation
[CreatePersistentUdpPortReservation]
1=USHORT StartPort
2=USHORT NumberOfPorts
3=PULONG64 Token
ParamCount=3
@=CreatePersistentUdpPortReservation
[DeletePersistentTcpPortReservation]
1=USHORT StartPort
2=USHORT NumberOfPorts
ParamCount=2
@=DeletePersistentTcpPortReservation
[DeletePersistentUdpPortReservation]
1=USHORT StartPort
2=USHORT NumberOfPorts
ParamCount=2
@=DeletePersistentUdpPortReservation
[DisableMediaSense]
1=HANDLE* pHandle
2=OVERLAPPED* pOverlapped
ParamCount=2
Header=windows.h.api;
@=DisableMediaSense
[GetAdapterOrderMap]
ParamCount=0
@=GetAdapterOrderMap
[GetIcmpStatisticsEx]
1=PMIB_ICMP_EX pStats
2=DWORD dwFamily
ParamCount=2
Header=iphlpapi.h.api;
@=GetIcmpStatisticsEx
[GetIpErrorString]
1=IP_STATUS ErrorCode
2=PWCHAR Buffer
3=PDWORD Size
ParamCount=3
Header=iphlpapi.h.api;
@=GetIpErrorString
[GetIpStatisticsEx]
1=PMIB_IPSTATS pStats
2=DWORD dwFamily
ParamCount=2
Header=iphlpapi.h.api;
@=GetIpStatisticsEx
[LookupPersistentTcpPortReservation]
1=USHORT StartPort
2=USHORT NumberOfPorts
3=PULONG64 Token
ParamCount=3
@=LookupPersistentTcpPortReservation
[LookupPersistentUdpPortReservation]
1=USHORT StartPort
2=USHORT NumberOfPorts
3=PULONG64 Token
ParamCount=3
@=LookupPersistentUdpPortReservation
[NhpAllocateAndGetInterfaceInfoFromStack]
1=IP_INTERFACE_NAME_INFO** ppTable
2=PDWORD pdwCount
3=BOOL bOrder
4=HANDLE hHeap
5=DWORD dwFlags
ParamCount=5
Header=iphlpapi.h.api;windows.h.api;
@=NhpAllocateAndGetInterfaceInfoFromStack
[RestoreMediaSense]
1=OVERLAPPED* pOverlapped
2=LPDWORD lpdwEnableCount
ParamCount=2
Header=windows.h.api;
@=RestoreMediaSense
