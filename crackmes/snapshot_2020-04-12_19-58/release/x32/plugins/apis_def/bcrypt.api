[BCryptAddContextFunction]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=LPCWSTR pszFunction
5=[CryptPriority] dwPosition
ParamCount=5
Header=bcrypt.h.api;
@=BCryptAddContextFunction
[BCryptConfigureContext]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=PCRYPT_CONTEXT_CONFIG pConfig
ParamCount=3
Header=bcrypt.h.api;
@=BCryptConfigureContext
[BCryptConfigureContextFunction]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=LPCWSTR pszFunction
5=PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig
ParamCount=5
Header=bcrypt.h.api;
@=BCryptConfigureContextFunction
[BCryptCreateContext]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=PCRYPT_CONTEXT_CONFIG pConfig
ParamCount=3
Header=bcrypt.h.api;
@=BCryptCreateContext
[BCryptDeleteContext]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
ParamCount=2
Header=bcrypt.h.api;
@=BCryptDeleteContext
[BCryptEnumAlgorithms]
1=[CryptOperation] dwAlgOperations
2=ULONG* pAlgCount
3=BCRYPT_ALGORITHM_IDENTIFIER** ppAlgList
4=ULONG dwFlags
ParamCount=4
Header=bcrypt.h.api;
@=BCryptEnumAlgorithms
[BCryptEnumContextFunctionProviders]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=LPCWSTR pszFunction
5=ULONG* pcbBuffer
6=PCRYPT_CONTEXT_FUNCTION_PROVIDERS* ppBuffer
ParamCount=6
Header=bcrypt.h.api;
@=BCryptEnumContextFunctionProviders
[BCryptEnumContextFunctions]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=ULONG* pcbBuffer
5=PCRYPT_CONTEXT_FUNCTIONS* ppBuffer
ParamCount=5
Header=bcrypt.h.api;
@=BCryptEnumContextFunctions
[BCryptEnumContexts]
1=[CryptConfigTable] dwTable
2=ULONG* pcbBuffer
3=PCRYPT_CONTEXTS* ppBuffer
ParamCount=3
Header=bcrypt.h.api;
@=BCryptEnumContexts
[BCryptEnumProviders]
1=LPCWSTR pszAlgId
2=ULONG* pImplCount
3=BCRYPT_PROVIDER_NAME** ppImplList
4=ULONG dwFlags
ParamCount=4
Header=bcrypt.h.api;
@=BCryptEnumProviders
[BCryptEnumRegisteredProviders]
1=ULONG* pcbBuffer
2=PCRYPT_PROVIDERS* ppBuffer
ParamCount=2
Header=bcrypt.h.api;
@=BCryptEnumRegisteredProviders
[BCryptGetFipsAlgorithmMode]
1=BOOLEAN* pfEnabled
ParamCount=1
@=BCryptGetFipsAlgorithmMode
[BCryptQueryContextConfiguration]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=ULONG* pcbBuffer
4=PCRYPT_CONTEXT_CONFIG* ppBuffer
ParamCount=4
Header=bcrypt.h.api;
@=BCryptQueryContextConfiguration
[BCryptQueryContextFunctionConfiguration]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=LPCWSTR pszFunction
5=ULONG* pcbBuffer
6=PCRYPT_CONTEXT_FUNCTION_CONFIG* ppBuffer
ParamCount=6
Header=bcrypt.h.api;
@=BCryptQueryContextFunctionConfiguration
[BCryptQueryContextFunctionProperty]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=LPCWSTR pszFunction
5=LPCWSTR pszProperty
6=ULONG* pcbValue
7=PUCHAR* ppbValue
ParamCount=7
Header=bcrypt.h.api;
@=BCryptQueryContextFunctionProperty
[BCryptQueryProviderRegistration]
1=LPCWSTR pszProvider
2=[CryptMode] dwMode
3=[CryptInterface] dwInterface
4=ULONG* pcbBuffer
5=PCRYPT_PROVIDER_REG* ppBuffer
ParamCount=5
Header=bcrypt.h.api;
@=BCryptQueryProviderRegistration
[BCryptRegisterConfigChangeNotify]
1=HANDLE* phEvent
ParamCount=1
Header=windows.h.api;
@=BCryptRegisterConfigChangeNotify
[BCryptRemoveContextFunction]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=LPCWSTR pszFunction
ParamCount=4
Header=bcrypt.h.api;
@=BCryptRemoveContextFunction
[BCryptResolveProviders]
1=LPCWSTR pszContext
2=[CryptInterface] dwInterface
3=LPCWSTR pszFunction
4=LPCWSTR pszProvider
5=[CryptMode] dwMode
6=[CryptEnumFlags] dwFlags
7=ULONG* pcbBuffer
8=PCRYPT_PROVIDER_REFS* ppBuffer
ParamCount=8
Header=bcrypt.h.api;
@=BCryptResolveProviders
[BCryptSetContextFunctionProperty]
1=[CryptConfigTable] dwTable
2=LPCWSTR pszContext
3=[CryptInterface] dwInterface
4=LPCWSTR pszFunction
5=LPCWSTR pszProperty
6=ULONG cbValue
7=PUCHAR pbValue
ParamCount=7
Header=bcrypt.h.api;
@=BCryptSetContextFunctionProperty
[BCryptUnregisterConfigChangeNotify]
1=HANDLE hEvent
ParamCount=1
Header=windows.h.api;
@=BCryptUnregisterConfigChangeNotify
[BCryptCloseAlgorithmProvider]
1=BCRYPT_ALG_HANDLE hAlgorithm
2=ULONG dwFlags
ParamCount=2
Header=bcrypt.h.api;
@=BCryptCloseAlgorithmProvider
[BCryptCreateHash]
1=BCRYPT_ALG_HANDLE hAlgorithm
2=BCRYPT_HASH_HANDLE* phHash
3=PUCHAR pbHashObject
4=ULONG cbHashObject
5=PUCHAR pbSecret
6=ULONG cbSecret
7=ULONG dwFlags
ParamCount=7
Header=bcrypt.h.api;
@=BCryptCreateHash
[BCryptDecrypt]
1=BCRYPT_KEY_HANDLE hKey
2=PUCHAR pbInput
3=ULONG cbInput
4=VOID* pPaddingInfo
5=PUCHAR pbIV
6=ULONG cbIV
7=PUCHAR pbOutput
8=ULONG cbOutput
9=ULONG* pcbResult
10=ULONG dwFlags
ParamCount=10
Header=cryptography.h.api;
@=BCryptDecrypt
[BCryptDeriveKey]
1=BCRYPT_SECRET_HANDLE hSharedSecret
2=LPCWSTR pwszKDF
3=BCryptBufferDesc* pParameterList
4=PUCHAR pbDerivedKey
5=ULONG cbDerivedKey
6=ULONG* pcbResult
7=[CryptDeriveKeyFlags] dwFlags
ParamCount=7
Header=bcrypt.h.api;cryptography.h.api;
@=BCryptDeriveKey
[BCryptDestroyHash]
1=BCRYPT_HASH_HANDLE hHash
ParamCount=1
Header=bcrypt.h.api;
@=BCryptDestroyHash
[BCryptDestroyKey]
1=BCRYPT_KEY_HANDLE hKey
ParamCount=1
Header=cryptography.h.api;
@=BCryptDestroyKey
[BCryptDestroySecret]
1=BCRYPT_SECRET_HANDLE hSecret
ParamCount=1
Header=bcrypt.h.api;
@=BCryptDestroySecret
[BCryptDuplicateHash]
1=BCRYPT_HASH_HANDLE hHash
2=BCRYPT_HASH_HANDLE* phNewHash
3=PUCHAR pbHashObject
4=ULONG cbHashObject
5=ULONG dwFlags
ParamCount=5
Header=bcrypt.h.api;
@=BCryptDuplicateHash
[BCryptDuplicateKey]
1=BCRYPT_KEY_HANDLE hKey
2=BCRYPT_KEY_HANDLE* phNewKey
3=PUCHAR pbKeyObject
4=ULONG cbKeyObject
5=ULONG dwFlags
ParamCount=5
Header=cryptography.h.api;
@=BCryptDuplicateKey
[BCryptEncrypt]
1=BCRYPT_KEY_HANDLE hKey
2=PUCHAR pbInput
3=ULONG cbInput
4=VOID* pPaddingInfo
5=PUCHAR pbIV
6=ULONG cbIV
7=PUCHAR pbOutput
8=ULONG cbOutput
9=ULONG* pcbResult
10=ULONG dwFlags
ParamCount=10
Header=cryptography.h.api;
@=BCryptEncrypt
[BCryptExportKey]
1=BCRYPT_KEY_HANDLE hKey
2=BCRYPT_KEY_HANDLE hExportKey
3=LPCWSTR pszBlobType
4=PUCHAR pbOutput
5=ULONG cbOutput
6=ULONG* pcbResult
7=ULONG dwFlags
ParamCount=7
Header=cryptography.h.api;
@=BCryptExportKey
[BCryptFinalizeKeyPair]
1=BCRYPT_KEY_HANDLE hKey
2=ULONG dwFlags
ParamCount=2
Header=cryptography.h.api;
@=BCryptFinalizeKeyPair
[BCryptFinishHash]
1=BCRYPT_HASH_HANDLE hHash
2=PUCHAR pbOutput
3=ULONG cbOutput
4=ULONG dwFlags
ParamCount=4
Header=bcrypt.h.api;
@=BCryptFinishHash
[BCryptFreeBuffer]
1=PVOID pvBuffer
ParamCount=1
@=BCryptFreeBuffer
[BCryptGenerateKeyPair]
1=BCRYPT_ALG_HANDLE hAlgorithm
2=BCRYPT_KEY_HANDLE* phKey
3=ULONG dwLength
4=ULONG dwFlags
ParamCount=4
Header=bcrypt.h.api;cryptography.h.api;
@=BCryptGenerateKeyPair
[BCryptGenerateSymmetricKey]
1=BCRYPT_ALG_HANDLE hAlgorithm
2=BCRYPT_KEY_HANDLE* phKey
3=PUCHAR pbKeyObject
4=ULONG cbKeyObject
5=PUCHAR pbSecret
6=ULONG cbSecret
7=ULONG dwFlags
ParamCount=7
Header=bcrypt.h.api;cryptography.h.api;
@=BCryptGenerateSymmetricKey
[BCryptGenRandom]
1=BCRYPT_ALG_HANDLE hAlgorithm
2=PUCHAR pbBuffer
3=ULONG cbBuffer
4=ULONG dwFlags
ParamCount=4
Header=bcrypt.h.api;
@=BCryptGenRandom
[BCryptGetProperty]
1=BCRYPT_HANDLE hObject
2=LPCWSTR pszProperty
3=PUCHAR pbOutput
4=ULONG cbOutput
5=ULONG* pcbResult
6=ULONG dwFlags
ParamCount=6
Header=bcrypt.h.api;
@=BCryptGetProperty
[BCryptHashData]
1=BCRYPT_HASH_HANDLE hHash
2=PUCHAR pbInput
3=ULONG cbInput
4=ULONG dwFlags
ParamCount=4
Header=bcrypt.h.api;
@=BCryptHashData
[BCryptImportKey]
1=BCRYPT_ALG_HANDLE hAlgorithm
2=BCRYPT_KEY_HANDLE hImportKey
3=LPCWSTR pszBlobType
4=BCRYPT_KEY_HANDLE* phKey
5=PUCHAR pbKeyObject
6=ULONG cbKeyObject
7=PUCHAR pbInput
8=ULONG cbInput
9=ULONG dwFlags
ParamCount=9
Header=bcrypt.h.api;cryptography.h.api;
@=BCryptImportKey
[BCryptImportKeyPair]
1=BCRYPT_ALG_HANDLE hAlgorithm
2=BCRYPT_KEY_HANDLE hImportKey
3=LPCWSTR pszBlobType
4=BCRYPT_KEY_HANDLE* phKey
5=PUCHAR pbInput
6=ULONG cbInput
7=ULONG dwFlags
ParamCount=7
Header=bcrypt.h.api;cryptography.h.api;
@=BCryptImportKeyPair
[BCryptKeyDerivation]
1=BCRYPT_KEY_HANDLE hKey
2=BCryptBufferDesc* pParameterList
3=PUCHAR pbDerivedKey
4=ULONG cbDerivedKey
5=ULONG* pcbResult
6=ULONG dwFlags
ParamCount=6
Header=cryptography.h.api;
@=BCryptKeyDerivation
[BCryptOpenAlgorithmProvider]
1=BCRYPT_ALG_HANDLE* phAlgorithm
2=LPCWSTR pszAlgId
3=LPCWSTR pszImplementation
4=[BCryptOpenAlgorithmProviderFlags] dwFlags
ParamCount=4
Header=bcrypt.h.api;
@=BCryptOpenAlgorithmProvider
[BCryptSecretAgreement]
1=BCRYPT_KEY_HANDLE hPrivKey
2=BCRYPT_KEY_HANDLE hPubKey
3=BCRYPT_SECRET_HANDLE* phSecret
4=ULONG dwFlags
ParamCount=4
Header=bcrypt.h.api;cryptography.h.api;
@=BCryptSecretAgreement
[BCryptSetProperty]
1=BCRYPT_HANDLE hObject
2=LPCWSTR pszProperty
3=PUCHAR pbInput
4=ULONG cbInput
5=ULONG dwFlags
ParamCount=5
Header=bcrypt.h.api;
@=BCryptSetProperty
[BCryptSignHash]
1=BCRYPT_KEY_HANDLE hKey
2=VOID* pPaddingInfo
3=PBYTE pbInput
4=DWORD cbInput
5=PBYTE pbOutput
6=DWORD cbOutput
7=DWORD* pcbResult
8=ULONG dwFlags
ParamCount=8
Header=cryptography.h.api;
@=BCryptSignHash
[BCryptVerifySignature]
1=BCRYPT_KEY_HANDLE hKey
2=VOID* pPaddingInfo
3=PUCHAR pbHash
4=ULONG cbHash
5=PUCHAR pbSignature
6=ULONG cbSignature
7=ULONG dwFlags
ParamCount=7
Header=cryptography.h.api;
@=BCryptVerifySignature
[BCryptDeriveKeyCapi]
1=BCRYPT_HASH_HANDLE hHash
2=BCRYPT_ALG_HANDLE hTargetAlg
3=PUCHAR pbDerivedKey
4=ULONG cbDerivedKey
5=ULONG dwFlags
ParamCount=5
Header=bcrypt.h.api;
@=BCryptDeriveKeyCapi
[BCryptDeriveKeyPBKDF2]
1=BCRYPT_ALG_HANDLE hPrf
2=PUCHAR pbPassword
3=ULONG cbPassword
4=PUCHAR pbSalt
5=ULONG cbSalt
6=ULONGLONG cIterations
7=PUCHAR pbDerivedKey
8=ULONG cbDerivedKey
9=ULONG dwFlags
ParamCount=9
Header=bcrypt.h.api;
@=BCryptDeriveKeyPBKDF2
