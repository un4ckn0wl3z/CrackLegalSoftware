[CreateNamedPropertyStore]
1=INamedPropertyStore** ppStore
ParamCount=1
@=CreateNamedPropertyStore
[MFCreate3GPMediaSink]
1=IMFByteStream* pIByteStream
2=IMFMediaType* pVideoMediaType
3=IMFMediaType* pAudioMediaType
4=IMFMediaSink** ppIMediaSink
ParamCount=4
@=MFCreate3GPMediaSink
[MFCreateAC3MediaSink]
1=IMFByteStream* pTargetByteStream
2=IMFMediaType* pAudioMediaType
3=IMFMediaSink** ppMediaSink
ParamCount=3
@=MFCreateAC3MediaSink
[MFCreateADTSMediaSink]
1=IMFByteStream* pTargetByteStream
2=IMFMediaType* pAudioMediaType
3=IMFMediaSink** ppMediaSink
ParamCount=3
@=MFCreateADTSMediaSink
[MFCreateAggregateSource]
1=IMFCollection* pSourceCollection
2=IMFMediaSource** ppAggSource
ParamCount=2
@=MFCreateAggregateSource
[MFCreateASFContentInfo]
1=IMFASFContentInfo** ppIContentInfo
ParamCount=1
@=MFCreateASFContentInfo
[MFCreateASFIndexer]
1=IMFASFIndexer** ppIIndexer
ParamCount=1
@=MFCreateASFIndexer
[MFCreateASFIndexerByteStream]
1=IMFByteStream* pIContentByteStream
2=QWORD cbIndexStartOffset
3=IMFByteStream** pIIndexByteStream
ParamCount=3
@=MFCreateASFIndexerByteStream
[MFCreateASFMediaSink]
1=IMFByteStream* pIByteStream
2=IMFMediaSink** ppIMediaSink
ParamCount=2
@=MFCreateASFMediaSink
[MFCreateASFMediaSinkActivate]
1=LPCWSTR pwszFileName
2=IMFASFContentInfo* pContentInfo
3=IMFActivate** ppIActivate
ParamCount=3
@=MFCreateASFMediaSinkActivate
[MFCreateASFMultiplexer]
1=IMFASFMultiplexer** ppIMultiplexer
ParamCount=1
@=MFCreateASFMultiplexer
[MFCreateASFProfile]
1=IMFASFProfile** ppIProfile
ParamCount=1
@=MFCreateASFProfile
[MFCreateASFProfileFromPresentationDescriptor]
1=IMFPresentationDescriptor* pIPD
2=IMFASFProfile** ppIProfile
ParamCount=2
@=MFCreateASFProfileFromPresentationDescriptor
[MFCreateASFSplitter]
1=IMFASFSplitter** ppISplitter
ParamCount=1
@=MFCreateASFSplitter
[MFCreateASFStreamingMediaSink]
1=IMFByteStream* pIByteStream
2=IMFMediaSink** ppIMediaSink
ParamCount=2
@=MFCreateASFStreamingMediaSink
[MFCreateASFStreamingMediaSinkActivate]
1=IMFActivate* pByteStreamActivate
2=IMFASFContentInfo* pContentInfo
3=IMFActivate** ppIActivate
ParamCount=3
@=MFCreateASFStreamingMediaSinkActivate
[MFCreateASFStreamSelector]
1=IMFASFProfile* pIASFProfile
2=IMFASFStreamSelector** ppSelector
ParamCount=2
@=MFCreateASFStreamSelector
[MFCreateAudioRenderer]
1=IMFAttributes* pAudioAttributes
2=IMFMediaSink** ppSink
ParamCount=2
@=MFCreateAudioRenderer
[MFCreateAudioRendererActivate]
1=IMFActivate** ppActivate
ParamCount=1
@=MFCreateAudioRendererActivate
[MFCreateCredentialCache]
1=IMFNetCredentialCache** ppCache
ParamCount=1
@=MFCreateCredentialCache
[MFCreateDeviceSource]
1=IMFAttributes* pAttributes
2=IMFMediaSource** ppSource
ParamCount=2
@=MFCreateDeviceSource
[MFCreateDeviceSourceActivate]
1=IMFAttributes* pAttributes
2=IMFActivate** ppActivate
ParamCount=2
@=MFCreateDeviceSourceActivate
[MFCreateMediaSession]
1=IMFAttributes* pConfiguration
2=IMFMediaSession** ppMS
ParamCount=2
@=MFCreateMediaSession
[MFCreateMP3MediaSink]
1=IMFByteStream* pTargetByteStream
2=IMFMediaSink** ppMediaSink
ParamCount=2
@=MFCreateMP3MediaSink
[MFCreateMPEG4MediaSink]
1=IMFByteStream* pIByteStream
2=IMFMediaType* pVideoMediaType
3=IMFMediaType* pAudioMediaType
4=IMFMediaSink** ppIMediaSink
ParamCount=4
@=MFCreateMPEG4MediaSink
[MFCreateMuxSink]
1=GUID guidOutputSubType
2=IMFAttributes* pOutputAttributes
3=IMFByteStream* pOutputByteStream
4=IMFMediaSink** ppMuxSink
ParamCount=4
@=MFCreateMuxSink
[MFCreateNetSchemePlugin]
1=REFIID riid
2=LPVOID* ppvHandler
ParamCount=2
Header=windows.h.api;
@=MFCreateNetSchemePlugin
[MFCreatePMPMediaSession]
1=DWORD dwCreationFlags
2=IMFAttributes* pConfiguration
3=IMFMediaSession** ppMediaSession
4=IMFActivate** ppEnablerActivate
ParamCount=4
@=MFCreatePMPMediaSession
[MFCreatePMPServer]
1=DWORD dwCreationFlags
2=IMFPMPServer** ppPMPServer
ParamCount=2
@=MFCreatePMPServer
[MFCreatePresentationClock]
1=IMFPresentationClock** ppPresentationClock
ParamCount=1
@=MFCreatePresentationClock
[MFCreatePresentationDescriptorFromASFProfile]
1=IMFASFProfile* pIProfile
2=IMFPresentationDescriptor** ppIPD
ParamCount=2
@=MFCreatePresentationDescriptorFromASFProfile
[MFCreateProxyLocator]
1=LPCWSTR pszProtocol
2=IPropertyStore* pProxyConfig
3=IMFNetProxyLocator** ppProxyLocator
ParamCount=3
@=MFCreateProxyLocator
[MFCreateRemoteDesktopPlugin]
1=IMFRemoteDesktopPlugin** ppPlugin
ParamCount=1
@=MFCreateRemoteDesktopPlugin
[MFCreateSampleCopierMFT]
1=IMFTransform** ppCopierMFT
ParamCount=1
@=MFCreateSampleCopierMFT
[MFCreateSampleGrabberSinkActivate]
1=IMFMediaType* pIMFMediaType
2=IMFSampleGrabberSinkCallback* pIMFSampleGrabberSinkCallback
3=IMFActivate** ppIActivate
ParamCount=3
@=MFCreateSampleGrabberSinkActivate
[MFCreateSequencerSegmentOffset]
1=MFSequencerElementId dwId
2=MFTIME hnsOffset
3=PROPVARIANT* pvarSegmentOffset
ParamCount=3
Header=ole.h.api;
@=MFCreateSequencerSegmentOffset
[MFCreateSequencerSource]
1=IUnknown* pReserved
2=IMFSequencerSource** ppSequencerSource
ParamCount=2
@=MFCreateSequencerSource
[MFCreateSimpleTypeHandler]
1=IMFMediaTypeHandler** ppHandler
ParamCount=1
@=MFCreateSimpleTypeHandler
[MFCreateStandardQualityManager]
1=IMFQualityManager** ppQualityManager
ParamCount=1
@=MFCreateStandardQualityManager
[MFCreateTopoLoader]
1=IMFTopoLoader** ppObj
ParamCount=1
@=MFCreateTopoLoader
[MFCreateTopology]
1=IMFTopology** ppTopo
ParamCount=1
@=MFCreateTopology
[MFCreateTopologyNode]
1=MF_TOPOLOGY_TYPE NodeType
2=IMFTopologyNode** ppNode
ParamCount=2
@=MFCreateTopologyNode
[MFCreateTranscodeProfile]
1=IMFTranscodeProfile** ppTranscodeProfile
ParamCount=1
@=MFCreateTranscodeProfile
[MFCreateTranscodeSinkActivate]
1=IMFActivate** ppActivate
ParamCount=1
@=MFCreateTranscodeSinkActivate
[MFCreateTranscodeTopology]
1=IMFMediaSource* pSrc
2=LPCWSTR pwszOutputFilePath
3=IMFTranscodeProfile* pProfile
4=IMFTopology** ppTranscodeTopo
ParamCount=4
@=MFCreateTranscodeTopology
[MFCreateTranscodeTopologyFromByteStream]
1=IMFMediaSource* pSrc
2=IMFByteStream* pOutputStream
3=IMFTranscodeProfile* pProfile
4=IMFTopology** ppTranscodeTopo
ParamCount=4
@=MFCreateTranscodeTopologyFromByteStream
[MFCreateVideoRenderer]
1=REFIID riidRenderer
2=void** ppVideoRenderer
ParamCount=2
Header=windows.h.api;
@=MFCreateVideoRenderer
[MFCreateVideoRendererActivate]
1=HWND hwndVideo
2=IMFActivate** ppActivate
ParamCount=2
Header=windows.h.api;
@=MFCreateVideoRendererActivate
[MFCreateWMAEncoderActivate]
1=IMFMediaType* pMediaType
2=IPropertyStore* pEncodingConfigurationProperties
3=IMFActivate** ppActivate
ParamCount=3
@=MFCreateWMAEncoderActivate
[MFCreateWMVEncoderActivate]
1=IMFMediaType* pMediaType
2=IPropertyStore* pEncodingConfigurationProperties
3=IMFActivate** ppActivate
ParamCount=3
@=MFCreateWMVEncoderActivate
[MFEnumDeviceSources]
1=IMFAttributes* pAttributes
2=IMFActivate*** pppSourceActivate
3=UINT32* pcSourceActivate
ParamCount=3
@=MFEnumDeviceSources
[MFGetService]
1=IUnknown* punkObject
2=REFGUID guidService
3=REFIID riid
4=LPVOID* ppvObject
ParamCount=4
Header=windows.h.api;
@=MFGetService
[MFGetSupportedMimeTypes]
1=PROPVARIANT* pPropVarMimeTypeArray
ParamCount=1
Header=ole.h.api;
@=MFGetSupportedMimeTypes
[MFGetSupportedSchemes]
1=PROPVARIANT* pPropVarSchemeArray
ParamCount=1
Header=ole.h.api;
@=MFGetSupportedSchemes
[MFGetTopoNodeCurrentType]
1=IMFTopologyNode* pNode
2=DWORD dwStreamIndex
3=BOOL fOutput
4=IMFMediaType** ppType
ParamCount=4
@=MFGetTopoNodeCurrentType
[MFRequireProtectedEnvironment]
1=IMFPresentationDescriptor* pPresentationDescriptor
ParamCount=1
@=MFRequireProtectedEnvironment
[MFShutdownObject]
1=IUnknown* pUnk
ParamCount=1
@=MFShutdownObject
[MFTranscodeGetAudioOutputAvailableTypes]
1=REFGUID guidSubType
2=DWORD dwMFTFlags
3=IMFAttributes* pCodecConfig
4=IMFCollection** ppAvailableTypes
ParamCount=4
Header=windows.h.api;
@=MFTranscodeGetAudioOutputAvailableTypes
[MFCreateFMPEG4MediaSink]
1=IMFByteStream* pIByteStream
2=IMFMediaType* pVideoMediaType
3=IMFMediaType* pAudioMediaType
4=IMFMediaSink** ppIMediaSink
ParamCount=4
@=MFCreateFMPEG4MediaSink
[MFCreateMP3ByteStreamPlugin]
1=REFIID riid
2=LPVOID* ppvHandler
ParamCount=2
Header=windows.h.api;
@=MFCreateMP3ByteStreamPlugin
[MFCreateProtectedEnvironmentAccess]
1=IMFProtectedEnvironmentAccess** ppAccess
ParamCount=1
@=MFCreateProtectedEnvironmentAccess
[MFGetLocalId]
1=const BYTE* verifier
2=UINT32 size
3=LPWSTR* id
ParamCount=3
@=MFGetLocalId
[MFGetSystemId]
1=IMFSystemId** ppId
ParamCount=1
@=MFGetSystemId
[MFLoadSignedLibrary]
1=LPCWSTR pszName
2=IMFSignedLibrary** ppLib
ParamCount=2
@=MFLoadSignedLibrary
